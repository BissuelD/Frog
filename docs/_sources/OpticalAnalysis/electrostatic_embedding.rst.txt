.. _electrostatic_embedding_page:

===========================
Electrostatic embedding 
===========================

.. contents:: Table of Contents
    :depth: 3
    :local:

In this page is presented the electrostatic embedding scheme available in |frog|. Not only some numerical and pratical tool are presented, but also some though about this method in general. It is very difficult to talk about numerics without the scientific taget in mind. So first let's remind some principle and defines the vocabulary used. 

Note that you can find more details in :ref:`this annex page<electrostatic_calculation_page>`.

Formalism
==========

---------------------------------
How to describe the environment?
---------------------------------

First, let's define a target molecule, for instance a water molecule at given time step. This molecule is composed of 3 atoms and 18 electrons. One can first wants to see how the geometrical deformation of this molecule can impacts the optical properties. Indeed, in an MD dynamics, even the tiniest molecule can have geometrical fluctuation due to thermal effects (gas phase) or intermolecular interaction (condensed phase). In this case, the quantum problem can be: ''what is the optical property of a molecule with fluctuating geometry in the vacuum phase'', where the geometry sampling is made over a given dynamics. The quantum Hamiltonian used will be the one of the vacuum phase: only the atoms of the molecule and the electronics interactions creat quantum potential. The effect of the environment is taken into account by the molecule geometry. 

This case is defined as ''Vacuum'' in |frog| because the environment does not generate a new Quantum potential. In this case, extracting the optical property of a molecule is quite straightforward from the MD dynamics: the only difference between each calculation of a molecule type will be the position of the atoms in the QM box. If there are no geometrical deformation, all the results will be the same in the molecular frame. 

This Vacuum case is very usefull to try your QM parameters and to have a first overview of the molecule optical property. However, using |frog| to only compute vacuum-like property is quite overkill. The real purpose is to take into account the effect of the molecule environment to the electronic degree of freedom, and thus to the optical property. To do so, we use an explicite effect of the neighborhood using the Polarizable Environment (PE) formalism of the |dalton| software. 

.. note:: Implicite solvant effect like PCMN are not implemented (yet) in |frog|. Indeed, these calculations are quite similar to the pure ''vacuum-like'' one in the sens that fpr the same target molecule geometry, the same result should be found. There is a far less need for sampling compared to explicite sampling. 

In the PE formalisme, the neigbors impact the molecule geometry through the MD dynamics and also the electrostic degree of freedom by adding a new electrostic potential. This potential depends on the electrostic description of the neighborgs. Indeed, in |dalton| the neighborgs can be described by a point charge, a dipole or a quadrupole. The electrostatic field generated by this neighborgs will be heterogenous within the molecule vinicity. Hence, each neighbors around the target molecule add a heterogenous electrostic potential, creating an almost unique quantum Hamiltonian. In |frog|, we will call this a ''configuration'': the geometry of the target molecule plus its electrostatic surrounding.

This method have several advantages:
    
    + First, the neighborhood is taken into account in the quantum probleme without increasing the number of electron. Eventhough a more complexe potential is used, it is often cheapier then more electrons. 
    + Moreover it include the effect of the neighborgs explicitly and thus takes into account the configuration fluctuation. This is very important for many optical property such as the hyperpolarizability -- for instance the one of water. 
    + Finaly, the effect of the neighborgs can be refine using dipole or quadrupole description. You may even include electrostatic polarization of the neighborhood!   

The main drawbacks is the number of calculation to be done. Indeed, for a given molecule, each frame of the MD in a condensed phase would very probably lead to different configuration. Not only the geometrical deformation of the target molecule should be sample, but also the electrostatic envrionment surrounding it.

Another drawbacks is that the QM box is containing only one molecule: electron inter-molecular sharing may not be properly described -- for instance H-bonds. Morever, unrealistic electronic spill-out (the electronic density of a molecule being too much localised close to a positive charge of the local neighborghood) can occurs due to this electrostic emebbeding since no electron-electron repulsion with the neighborghood is present. 

To tackle this last problem, instead of resolving the quantum probleme for a single molecule, you can solve it for a grasp. For instance, let's say we want to compute the optical response of an Na cation surrounded by water molecule. Since very strong intermolecular interaction occurs between the cation and the first solvatation shell, it can seems more mainingfull to compute the optical response of the systeme defined by the cation and its closest neighborgs. As if it were only one ''super-molecule''. In this case, the QM box will be defined by the Na cation, and the water molecule up to a given distance. Therefore, more atoms and electrons are involved in this Quantum Hamiltonian, but the intermolecular electronic interation will also be correctly discribed. Within this scheme, the water molecule futher away from the Na cation which are not taken into account in the box will aslo contribute to the Hamiltonina by addind an electrostatic potential, as for the previous PE method.  


In |frog| this method is called 'PE + QM'. Its main advantage is that it take even better into account the neighborghood effect. For some molecule with intense intermolecular interaction, it would made few sens to compute condensed phase-like property without these intermolecular quantum effect. However, the main drawbacks is it numerical cost: it increases the number of electrons. For todays numerical electronic quantum resolution, the scaling is far for being linear: it is largy faster to perform N QM calculations with M electrons than N/2 QM calculations with 2xM electrons.

Now that we have presented shortly the different method available, let's takle a bit about how it is handle in |frog|. 

---------------------------------
Environment building procedure
---------------------------------

Once you have define the electrostatic embedding you want, |frog| will create the relative electrostatic embedding and write the corresponding input file for |dalton| **fully automatically**. To do so, it will use the Molecular Type architecture, which has been built for this purpose. 

To acheive this, two type of object are used: the :ref:`QMDescription object<qm_description_object_page>` and :ref:`ElectrostaticDescription object<electrostatic_description_object_page>`

The QMDescription defines for a Molecule Type how it should be described if involved in a QM box, *i.e.* the atomic position, charge and the number of electrons. The ElectrostaticDescription defines how it should impact a QM environement if involved in a PE environment -- *i.e.* the point charge localisation and values, and or the dipolar or quadrupolar moment ect... Each Molecule Type shall have available in its molecular module the functions (qm_target_description and electrostatic_description) that create these objects. 

For instance, let's say a water molecule should contribute to the electrostatic environment of a target molecule, and that this molecule is described using the Molecule Type :ref:`Water_TIP4P2005<MLF_Water_TIP4P2005_page>`. In this case, 3 point charges are used to describe this neighborgs: a negative one close to the oxygen atom and 2 positive ones at the hydrogen position. The position of these charges are given within the target molecule frame and is included in this electrostatic environment. If the water molecule is the target molecule, the position of the atom and their charge is given by the qm_target_description function. Hence, in the case a molecule is the target molecule or is in the neighborghood, the function qm_target_description and electrostatic_description of the relative MT return geometrical-dependent descriptions. 

Thus, as a user, it is very important to check how each MT describes the molecule: using point charge? Point charge and dipole? It is really up to you to decide and to try out. Moreover, you can also defined the MT you wants: to defines your own electrostatic description for instance. This part was made to be as user-friendly as possible, and :ref:`this tutorial<what_should_contain_molecular_type_file_page>` should help you to do so. |frog| provides you a solid architecture but today not much MT are available. If you want to defines your own MT, please do not hesitate to contact us and to provide feedback: we will be more than happy to increase and improve |frog| possibilities! 

-------------------
What should I use?
-------------------

.. note:: Je ne sais pas si cela a sa place ici. Je l ecris car cela me parrait important, mais a voir si je le met pas autre part (tutotrial) ou pas du tout (et ca devient une annexe de ma these? ou un document interne?).


To sum up, you can use several embedding scheme: vacuum-like, PE (one molecule surrounded by static or dynamic electrostatic environment) or PE+QM (one or several molecules surrounded by static or dynamic electrostatic environment). Plus, once you have the dynamics, you can chose to use the same electrostatic description as in the MD or not. Finaly, to increase even more the complexity, you can solve the quantum problem by several method (DFT, CCSD ect...) and where the basis choice is not always obvious.  

So what to use? 

Sadly, today the |frog| authors are not able to provide you a solid and simple method to decide. It will probably be very dependent of your system. For some 'good behaviour', you can see this tutorial. Moreover, here are some thoughs: 

    + Electrostatic scheme:
    
You should first try out the vacuum one to have an idea of the numerical cost of a single calculation. This will also give you some numbers for the optical property you are looking for. Then, you can try the PE ones. You really should think twice before using the PE+QM. First because it is way more CPU-demanding. Second because the interpretation of the result will be much more difficult to do. Indeed, the ''optical property'' obtained by this method will be no longer the one of the target molecule, but the one of the graps. 

    + Electrostatic Description:
    
This is maybe the one with the more possibilities. The main question is: should you use the same electrostatic description as in your MD run? Indeed, what is the validity of computing the electronic degree of freedom using one electrostatic embedding while the geometry has not been obtained with the same parameters? This is trully a difficult question to answer. 

In any case, you may want to compare the obtained results with different electrostatic description. This may help you to find what results are robust from the one which are more 'parameter-dependent'. 

    + QM parameters

The choice of the functional (in the DFT case) and the basis is primordial for optical property, and espcially for non-linear one. If you want to validate your parameters you are using in |frog|, the basis is really the one you want to check first. 


Now, let's be more precise about the electrostatic scheme available and how to use them in |frog|. 

Select the emmebeding scheme:
=============================

First of all, the electrostatic emmebeding scheme is related to a QM calculation of an MT. Therefore, all the option for this behaviour will be treated using the :ref:`QMParameter object<qm_parameter_object_page>`. Moreover, in the OpticalParameter, a QM calculation has to be required: either using the :ref:`QMParameter.alpha_calculation_style<autodoc_opticalparameter_alpha_calculation_style>` or :ref:`QMParameter.beta_calculation_style<autodoc_opticalparameter_beta_calculation_style>` attributes. 

In the following is presented how to initialized the electrostatic emmebbeding along with some precise detailed. For more information about how to deal with the rest of the QM calculation, see :ref:`this page<qm_box_page>`.


.. _electrostatic_embedding_vacuum_scheme:

---------
Vacuum
---------

To have vacuum like QM calculation, *i.e.* no environement, set the :ref:`QMParameter.calculation_style<autodoc_qmparameter_calculation_style>` to PE and the :ref:`QMParameter.pe_level<autodoc_qmparameter_pe_level>` to -1: ::
    
    QMParameter.calculation_style = 'PE'
    QMParameter.pe_level = -1


.. _electrostatic_embedding_PE_scheme:

------------
PE 
------------

To have the original PE embedding electrostatic scheme, set the :ref:`QMParameter.calculation_style<autodoc_qmparameter_calculation_style>` to PE: ::
    
    QMParameter.calculation_style = 'PE'
    
Then, you can choose two different order: 0 or 1. The zero order do not take into account the polarizability of the environment, the first order does. 

Order 0
-------

To choose the zeroth order, set the :ref:`QMParameter.pe_level<autodoc_qmparameter_pe_level>` to 0: ::

    QMParameter.pe_level = 0

Another important parameter is :ref:`QMParameter.max_pe_distance_neigh<autodoc_qmparameter_max_pe_distance_neigh>` which set the maximal distance between the 'mean position' of the target molecule and the 'mean position' of a neighborgs. Neighbors further away then this distance are not considerated in the electrostatic environement. The distance is given in Angstrom: ::
    
    QMParameter.max_pe_distance_neigh = 10
    
In this case, the neighborgs are described using point charge, dipole and quadrupole moment. See the :ref:`bottom of this page<electrostatic_description_object_page>` for more information about how to described a neighbors electrostatic property. 

Order 1
-------

To choose the first order, set the :ref:`QMParameter.pe_level<autodoc_qmparameter_pe_level>` to 1: ::

    QMParameter.pe_level = 1

Here two distance are taken into account: :ref:`QMParameter.max_pe_polarization_distance_neigh<autodoc_qmparameter_max_pe_polarization_distance_neigh>` and :ref:`QMParameter.max_pe_distance_neigh<autodoc_qmparameter_max_pe_distance_neigh>` : :: 

    QMParameter.max_pe_polarization_distance_neigh = 5
    QMParameter.max_pe_distance_neigh = 10

In this case, the neighborgs within 5 Angstrom of the target molecule are described with polarizabilities, the neighborgs within 5 to 10 are described without polarizabilities. The nieghborgs futher awat then 10 Angstrom are not taken into account in the electrostatic environement.

.. note:: If `QMParameter.max_pe_polarization_distance_neigh = 12` and `QMParameter.max_pe_distance_neigh = 10`, only neighborgs within 10 Angstrom are considerated, and they are all described using polarizabilities. 

In the neighbors are described with polarizabilities, it means that they are described using point charge, dipole, quadrupole and a induced dipole moment. See the :ref:`bottom of this page<electrostatic_description_object_page>` for more information about how to described a neighbors electrostatic property. 

--------
PE long
--------

To have an environment where **all** the molecule of the box contributes to the electrostatic environement, set :ref:`QMParameter.calculation_style<autodoc_qmparameter_calculation_style>` to PE long: ::
    
    QMParameter.calculation_style = 'PE long'
    QMParameter.pe_level = 0

Today, only the :ref:`QMParameter.pe_level<autodoc_qmparameter_pe_level>` 0 is accepted. Moreover, the molecule in the box should not contains dipole nor quadrupole moment in their electrostatic description. Hence, the neighborgs are described using only point charge.  See the :ref:`bottom of this page<electrostatic_description_object_page>` for more information about how to described a neighbors electrostatic property. 

.. todo:: dev the 'PE long' for dipole and quadrupole and for pe order 1, and the 'PE long + QM'. This is not complicated but have to answer to a need. 

In this scheme, two areas are defined: 'direct' and 'long-range'. 

If a neighborgs contribute 'directly' to the electrostatic environment, it has to be understand as the 'PE' or 'PE + QM' scheme: its contribution will be deal by Dalton though the potential.pot file. It means that for a point charge, the electrostatic field generated within the QM box vinicity is **heterogenous**. 

If a neighborgs contribute by the 'long-range' scheme, its precise electrostatic description (for instance poitn charge at a given position with respect to the target molecule) is replace by the static electrostatic field it generated at the target molecule 'mean position'. 

Pratically, the electrostatic field generated by each point charge composing the neighborgs is calculated at the target molecule mean position. These electrostatic field are summed up for every neighborgs in this 'long-range' area. The resulting electrostatic field is added to the QM calculation as being an **homogenous** electrostatic field. This approximation is good if the charge of the neighborgs are small enough or far enough from the target molecule. A major benefit is that it reduces dramatically the number of molecule to put in the potential.pot file: it reduces the calculation time and the disk-space. 

To determine where starts this 'long-range' part, use :ref:`QMParameter.rcut_PE_direct<autodoc_qmparameter_rcut_PE_direct>`: ::
    
    QMParameter.rcut_PE_direct = 10
    
In this case, the neighborgs within 10 Angstrom from the target molecule are treated 'directly'. All other molecule further away contributes to the electrostatic environement in the 'long-range' part. 

.. todo:: Parler des smothing part ici. Mais une fois que cela sera bien tester. Actuellement je ne m en sert pas et je vois pas vraiment l interet? Peut etre plus pour des ions? A voir avec plus d experience sur cette methode? 

The long-range part can be even extented using the :ref:`QMParameter.PE_k_vector_range<autodoc_qmparameter_PE_k_vector_range>`: ::
    
    QMParameter.PE_k_vector_range = [2, 2, 2]

In this case, the QM box will be duplicated in the laboratory +X, -X, +Y, -Y, +Z and -Z direction 2 times. All the molecule in the repeated box contributes to the long-range part, including the PBC images of the target molecule. 

This attribute has been mamde in order to deal with geometrical embedding problem. Let's say we are in the bulk phase. If you are using a very large PE embedding scheme, |frog| will duplicate the MD box if needed in order to built a spherical environement. If you are using the PE long scheme with a cubic MD box, the electrostatic environement is cubic, which can arise some problems. Therefore, to avoid this, you can built **very large** cubic environement using :ref:`QMParameter.PE_k_vector_range<autodoc_qmparameter_PE_k_vector_range>`. You will still have a cubic enviroenement instead of a spherical one, but one can expect that if the environment is large enough, the 2 geometry converges -- at least regarding the obtained result for the optical property we are looking for.     

.. _electrostatic_embedding_PE_QM_scheme:

----------
PE + QM 
----------

To have an environment where the neighborgs can contribute to the QM box and to the electrostatic one, set :ref:`QMParameter.calculation_style<autodoc_qmparameter_calculation_style>` to PE + QM ::
    
    QMParameter.calculation_style = 'PE + QM'
    
This scheme share very similar option then the 'PE' one: you can choose two different order: 0 or 1 using :ref:`QMParameter.pe_level<autodoc_qmparameter_pe_level>`. The zero order do not take into account the polarizability of the environment, the first order does.

To chose which neighborgs should be included in the QM box, use :ref:`QMParameter.max_qm_box_distance_neigh<autodoc_qmparameter_max_qm_box_distance_neigh>`: ::
    
    QMParameter.pe_level = 1
    QMParameter.max_qm_box_distance_neigh = 2.5
    QMParameter.max_pe_polarization_distance_neigh = 4
    QMParameter.max_pe_distance_neigh = 15    
    
In this case, the neighborgs within 2.5 Angstrom of the target molecule are included in the QM box. The number of atom and electron for the QM calculation is thus increased. Neighborgs within 2.5 and 4 Angstrom of the target moleculeare described with polarizabilities, the neighborgs within 4 to 15 are described without polarizabilities. The neighborgs futher awat then 15 Angstrom are not taken into account in the electrostatic environement or in the QM box.

See the :ref:`bottom of this page<electrostatic_description_object_page>` for more information about how to described a neighbors electrostatic property. 

.. _electrostatic_embedding_feedback:

Feedback on the emmebding:
=============================

In all of the scheme, tracking the electrostatic environement is very important. To do so, 2 main possibilities are available: look at the obtained electrostatic neighborhood or at the electrostatic field generated by them. First, we will see how to visualized the embedding, using the :ref:`QMParameter.write_xyz_environment<autodoc_qmparameter_write_xyz_environment>` attribute. Then how to use the :ref:`Electrostatic Field diagram<autodoc_diagram_electric_field>` to track the electrostatic effect of the environement on the molecule type in average (or not).


-------------------------------
Visualisation of the embedding
-------------------------------

During the QMParameter definition, you can keep track of the electrostatic direct environment using the attribute :ref:`QMParameter.write_xyz_environment<autodoc_qmparameter_write_xyz_environment>`.  A file named *potential.xyz* is created in the directory: :ref:`GlobalParameter.dir_torun_QM<autodoc_gp_dir_torun_QM>`/Name_of_the_MT/Time_step/Molecule_number. It is designed to work with the open software VMD (https://www.ks.uiuc.edu/Research/vmd/) but may work with other. In the console, type: `vmd potential.xyz` to open the file using VMD. 

In this potential.xyz file, the target molecule and its environment is recorded for a given frame. The coordinates are written in the laboratory frame, but recentered arround the target molecule -- only translation are used. The target molecule atom are named 'X' instead of their real name. This is done to make it easier to see in the visualisaion. 

In the |dalton| PE environment, and thus in |frog|, the electrostatic environement is described by a set of ''sites''. Each sites can hold a point charge, dipole moment ect... In the potential.xyz file, all the site are composting the (direct) electrostatic environement are recorded. The site name are given by :ref:`ElectrostaticDescription.L_localization_type<autodoc_electrodescription_L_localization_type>`. If you want to have the corresponding charge, dipole moment or polarizability, see the potential.pot file.  

For each :ref:`QMParameter.calculation_style<autodoc_qmparameter_calculation_style>`, the output will be a bit different:

    + PE 

The target molecule is alone in its QM box. The potential.xyz file contains all the neighbors that contribute to the electrostatic environement of the target molecule. 


    + PE long

The target molecule is alone in its QM box. The potential.xyz file contains the neighbors that contribute to the **direct** electrostatic environement of the target molecule. The long-range part is not represented in this file. See the following part for the tracking of the long-range electrostatic field.  
    
    + PE + QM

The target molecule may not be alone in its QM box. The neigborgs molecule with are included in the QM box as well are written using the 'Y' atom. The rest of the potential.xyz file contains all the neighbors that contribute to the electrostatic environement of the target molecule. 


To conclude this part, here are some aspects that you may want to check: 

    + Does the symetry (3D, 2D, 1D?) is respected in this file? If not, see :ref:`QMParameter.calculation_style<autodoc_qmparameter_calculation_style>` and :ref:`GlobalParameter.env_authorised_pbc_condition<autodoc_gp_env_authorised_pbc_condition>`.
    + If the direct environment is very large, does the PBC condition are working? If not, see :ref:`GlobalParameter.env_authorised_pbc_condition<autodoc_gp_env_authorised_pbc_condition>`.
    + Are their some molecule in top of each other? If it is so, check the MD simulation!
    + Is the electrostatic description matching the one you intented to use? You can cross check the coordinate given in the potential.xyz file and their value in the potential.pot one. If not, see the molecular library file function  :ref:`electrostatic_description<molecular_library_file_electrostatic_description_function_page>` of your MT which provide the electrostatic description.
    + Does the QM box make sens? You can also cross check the coordinate given in the potential.xyz file and the values and QM details in the molecule.mol file. 



----------------------
Electrostatic Diagram
----------------------

Using the :ref:`QMParameter.write_xyz_environment<autodoc_qmparameter_write_xyz_environment>` can be very helpfull to have a precise picture of single situation. However, it is very tidious to check all the inputs what |frog| generates automatically. Therefore, to help the tracking of the electrostatic environement, the :ref:`electrostatic_field diagram<autodoc_diagram_electric_field>` can be used. Using the 'PE' option, the electrostatic field generated by the environement will be recorded in this diagram and SingleMolecule attributes. 

More precisely, the electrostatic field generated by the environement at the 'mean position' of the molecule is calculated for each molecule, and also its derivative. The values are available in the laboratory and in the molecular frame. See the :ref:`electrostatic_field diagram<autodoc_diagram_electric_field>` for more information.

.. note:: The unit used to stored the electrostatic field is V/A and the derivative V/A^2 in the electrostatic_field diagram

The value stored will be different for each :ref:`QMParameter.calculation_style<autodoc_qmparameter_calculation_style>`: 

    + PE 

The electrostatic field, and its derivative, generated by the electrostatic environement is stored for each molecule. All the molecule that contributed to this field can be also seen in the potential.xyz file. 


    + PE long

A neighborgs in the electrostatic environement can affect the QM box either **directly** or either in the **long-range** part. The direct part work as the usual 'PE' method: the electrostatic field generated is heterogenous and all the molecule contributing to this part are also stored in the potential.xyz file. The electrostatic field stored in the electrostatic_field diagram is the one felt at the 'mean position' of the target molecule. The long-range part is affected by all the molecue in the box which do not contribute to the direct part, plus the PBC copies -- see :ref:`QMParameter.PE_k_vector_range<autodoc_qmparameter_PE_k_vector_range>`. The total electrostatic field generated by all these neighborgs are stored in the 'long-range' part of the  electrostatic_field diagram, as well as the electrastic field derivative. 

.. note:: If you are using correctly the 'PE long' method, the long-range electrostatic field derivative should be very small!

The long-range electrostatic field is also accessible in the dalton.dal file of each configuration. Please note that it is written in the laboratory frame, and using atomic unit.   
    
    + PE + QM

The target molecule may not be alone in its QM box. If a neigborg is included in the QM box, it does no longer contribute to the direct electrostatic environement (it is not included in the potential.pot file!). Thuse, the electrostatic field stored in the electrostatic_field diagram do not take into account this type of neighborgs. 

.. Warning:: The electrostic field stored in the diagram using the 'PE' option is calculated along with the QM input preparation in the code. Therefore, if you are using the option :ref:`GlobalParameter.redo_QM<autodoc_gp_redo_QM>` `do_not_redo`, some of the QM configuration may not be initialized if the result if available -- it is the purpose of this `do_not_redo` option. Thus, no electrostatic field will be available during the third part of the run, and |frog| will crash. Therefore, issues can happend if using the electrostatic_field diagram in the 'PE' option along with the `GP.redo_QM=do_not_redo`. To avoid this problem, here is a trick: do not use at all the  electrostatic_field diagram at first. Perform all the QM claculation, using the `GP.redo_QM=do_not_redo` to avoid redoing the same QM calculation. Once it is done, save the :ref:`GlobalParameter.dir_torun_QM<autodoc_gp_dir_torun_QM>` directory (which thus contain all the QM result), and clear all the file/directory. Rerun |frog| with the same parameters, but this time with the  electrostatic_field diagram in the 'PE' mode. |frog| will re-creat all the QM input and compute all the electostatic field (because there are no QM results available), and stops at the end of the second part. Then, do not launch again the QM run but copy the previous results. Run again |frog|: it should have detected the QM results and end corretly the run. 

.. note:: la note ci dessus est un peu fastidieuse, mais helas je n ai pas trop de 'bonne' solution qui me vienne. Deja, est ce que je raconte au dessus est comprehensible? 

------------------
Electrostatic Map
------------------


.. todo:: TODO 



.. _electrostatic_description_object_page:

Electrostatic Description object
=================================

In this section is detailed precisly the different attribute of the ElectrostaticDescription object and how is encoded the different electrostatic parameters presented above. This section is of primor interest if you intend to define yourself a new electrostatic description of a MT. If you want a quick overview, skip this part to read the other part of this page, or this tutorial ADD REF and :ref:`this one<molecular_library_file_electrostatic_description_function_page>`.

For more information and pratical example, see also the molecular library file function :ref:`electrostatic_description<molecular_library_file_electrostatic_description_function_page>` which assign for each molecule the individual ElectrostaticDescription object. 

------------
Attributes
------------

.. _autodoc_electrodescription_multipole_order:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.multipole_order
    :noindex:

| 

.. _autodoc_electrodescription_polarization_order:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.polarization_order
    :noindex:

|

.. _autodoc_electrodescription_L_localization_site:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.L_localization_site
    :noindex:

|   

.. _autodoc_electrodescription_L_localization_type:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.L_localization_type
    :noindex:

|   

.. _autodoc_electrodescription_L_charge_order_0:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.L_charge_order_0
    :noindex:

|   

.. _autodoc_electrodescription_L_charge_order_1:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.L_charge_order_1
    :noindex:

|   

.. _autodoc_electrodescription_L_charge_order_2:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.L_charge_order_2
    :noindex:

|   

.. _autodoc_electrodescription_L_polarization_order_1_1:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.L_polarization_order_1_1
    :noindex:

|   

.. _autodoc_electrodescription_L_polarization_exclude:
.. autoattribute:: Frog.class_OpticalParameter.ElectrostaticDescription.L_polarization_exclude
    :noindex:

    
    
    

-----------
Procedure
-----------

A faire tout a la fin une fois que les aspects generals ont ete explique. Ici ne garder que vraiment les parties les plus techniques. 



